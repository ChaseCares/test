# https://github.com/open-contracting/cardinal-rs/blob/main/.github/workflows/release.yml

name: Release
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  release:
    permissions:
      # for actions/upload-release-asset to upload release assets
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - env:
          GH_TOKEN: ${{ github.token }}
        run: gh release create ${{ github.ref_name }}
  compile-assets:
    permissions:
      contents: write
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Include all "Tier 1 with Host Tools" targets and "Tier 2 with Host Tools" targets for Windows and macOS,
        # excluding *-pc-windows-msvc, which requires cross-toolchains. Goal is one option per OS per architecture.
        # https://doc.rust-lang.org/rustc/platform-support.html
        # https://github.com/cross-rs/cross#supported-targets
        # https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            command: cargo

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.target }}
      - run: |
          cargo install cross --git https://github.com/cross-rs/cross
          ${{ matrix.command }} build --release --target ${{ matrix.target }}

      - name: Create archive
        id: archive
        shell: bash
        run: |
          APP_NAME="test"
          EXTENSION="tar.gz"
          DIRECTORY="$APP_NAME-${{ github.ref_name }}-${{ matrix.build }}-${{ matrix.target }}"
          if [[ "${{ matrix.target }}" =~ "-pc-windows-" ]]; then
            SUFFIX=".exe"
          else
            SUFFIX=""
          fi
          mkdir "$DIRECTORY"
          cp "target/${{ matrix.target }}/release/$APP_NAME$SUFFIX" "$DIRECTORY"
          tar --create --gzip --file="$DIRECTORY.$EXTENSION" "$DIRECTORY"
          echo "path=$DIRECTORY.$EXTENSION" >> $GITHUB_OUTPUT
      - env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload ${{ github.ref_name }} ${{ steps.archive.outputs.path }}
